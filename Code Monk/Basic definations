Runtime errors:
A runtime error means that the program was compiled successfully, but it exited with a runtime error or crashed.

1. Segmentation Fault:
This may be caused e.g. by an out-of-scope array index causing a buffer overflow, an incorrectly initialized pointer, etc. This signal is generated when a program tries to read or write outside the memory that is allocated for it, or to write memory that can only be read. For example, you’re accessing a[-1] in a language which does not support negative indices for an array.

2. Output limit exceeded :
Your program has printed too much data to output.

3. Floating point error :
This usually occurs when you’re trying to divide a number by 0, or trying to take the square root of a negative number.

4. Non zero exit code :
this message means that the program exited returning a value different from 0 to the shell. For languages such as C/C++, this probably means you forgot to add "return 0" at the end of the program.

5. Memory Limit Exceeded :
This error means that your program tried to allocate memory beyond the memory limit indicated. having an array of size [100000] * [100000] will never work.

Time Complexity :
Time complexity of an algorithm quantifies the amount of time taken by an algorithm to run as a function of the length of the input.

Space complexity :
Space complexity of an algorithm quantifies the amount of space or memory taken by an algorithm to run as a function of the length of the input.

